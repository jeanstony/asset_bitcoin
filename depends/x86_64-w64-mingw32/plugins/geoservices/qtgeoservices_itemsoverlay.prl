QMAKE_PRL_BUILD_DIR = F:/boot/qtsrc/qt-everywhere-opensource-src-5.9.7/qtlocation/src/plugins/geoservices/itemsoverlay
QMAKE_PRO_INPUT = itemsoverlay.pro
QMAKE_PRL_TARGET = libqtgeoservices_itemsoverlay.a
QMAKE_PRL_CONFIG = lex yacc depend_includepath testcase_targets import_qpa_plugin windows qt_build_extra file_copies qmake_use qt warn_on release link_prl debug_and_release precompile_header cross_compile release no_plugin_manifest static win32 mingw gcc copy_dir_files cross_compile sse2 sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vbmi avx512vl f16c largefile precompile_header prefix_build force_independent force_bootstrap utf8_source create_prl link_prl prepare_docs qt_docs_targets no_private_qt_headers_warning QTDIR_build qt_example_installs exceptions_off testcase_exceptions warning_clean done_config_gypsy done_config_winrt release ReleaseBuild Release build_pass plugin relative_qt_rpath create_cmake c++11 strict_c++ release ReleaseBuild Release build_pass have_target staticlib exclusive_builds no_autoqmake thread opengl moc resources
QMAKE_PRL_LIBS = -Lc:/openssl/lib -LC:/icu4c/lib/x64 -LC:\\opengl -L$$[QT_INSTALL_LIBS] $$[QT_INSTALL_LIBS]\\libQt5Location.a -L$$[QT_INSTALL_LIBS] -L$$[QT_INSTALL_LIBS] $$[QT_INSTALL_LIBS]\\libQt5Quick.a $$[QT_INSTALL_LIBS]\\libQt5Gui.a -llibEGL -llibGLESv2 $$[QT_INSTALL_LIBS]\\libqtlibpng.a $$[QT_INSTALL_LIBS]\\libqtharfbuzz.a $$[QT_INSTALL_LIBS]\\libQt5Positioning.a $$[QT_INSTALL_LIBS]\\libclip2tri.a $$[QT_INSTALL_LIBS]\\libpoly2tri.a $$[QT_INSTALL_LIBS]\\libclipper.a $$[QT_INSTALL_LIBS]\\libQt5Qml.a $$[QT_INSTALL_LIBS]\\libQt5Network.a -ldnsapi -liphlpapi -lcrypt32 $$[QT_INSTALL_LIBS]\\libQt5Core.a -lmpr -lversion -lkernel32 -lshell32 $$[QT_INSTALL_LIBS]\\libqtpcre2.a $$[QT_INSTALL_LIBS]\\liblibEGL.a $$[QT_INSTALL_LIBS]\\liblibGLESv2.a -lcomdlg32 -loleaut32 -limm32 -lwinmm -lws2_32 -lole32 -luuid -ladvapi32 -ld3d9 -ldxguid $$[QT_INSTALL_LIBS]/libtranslator.a $$[QT_INSTALL_LIBS]/libpreprocessor.a -lgdi32 -luser32
